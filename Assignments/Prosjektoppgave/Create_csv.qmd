---
title: "Sok-1005"
format: html
editor: visual
---

This quarto document is used to wrangle the data and create a csv for use in the exam

```{r}
rm(list=ls()) 
library(tidyverse)
library(rvest)
library(janitor)
library(lubridate)
library(quantmod) 
library(stringr)
library(foreign)
library(mefa)
```

```{r}
category <- c("Analgesics","Bath Soap","Beer","Bottled Juices","Cereals",
              "Cheeses","Cigarettes","Cookies","Crackers","Canned Soup",
              "Dish Detergent","Front-end-candies","Frozen Dinners","Frozen Entrees",
              "Frozen Juices","Fabric Softeners","Grooming Products","Laundry Detergents",
              "Oatmeal","Paper Towels","Soft Drinks","Shampoos","Snack Crackers",
              "Soaps","Toothbrushes","Canned Tuna","Toothpastes","Bathroom Tissues")

letter2number <- function(x) {utf8ToInt(x) - utf8ToInt("A") + 1L}
seed_number <- sum(letter2number("Trym"))
set.seed(seed_number)
sample(category, 1)

```

```{r}

count <- read.dta("G:/UiT_Fag/SOK-1005/Assignments/Eksamensoppgave/ccount.dta")

demo <- read.dta("G:/UiT_Fag/SOK-1005/Assignments/Eksamensoppgave/demo.dta")

UPC = read.csv('G:/UiT_Fag/SOK-1005/Assignments/Eksamensoppgave/upcsdr.csv')

mov = read.csv('G:/UiT_Fag/SOK-1005/Assignments/Eksamensoppgave/wsdr.csv')
```

```{r}
# Due to how the weekly reporting is structured, the data will include the dates from 04/01-1990 to 02/01-1991
# UPC is replaced with brand name
# QTY, PRICE, SALE, OK and HEX are removed
# Some stores have a few weeks with 0 in MOVE

#Coca-Cola
mov_coca <- filter(mov,UPC %in% c("4900000639", "4900001550", "4900000043", "4900000987", "4900000044", "4900001571", "4900000634", "4900001267"))

mov_coca <- mov_coca %>% mutate(profit = ((PRICE*MOVE)/QTY)*(PROFIT/100))

mov_coca <- mov_coca %>% group_by(STORE,WEEK) %>% 
  summarise(across(c(profit),sum),
            .groups = 'drop') %>%
  as.data.frame()

mov_coca <- mov_coca %>% filter(WEEK %in% (17:68))
colnames(mov_coca)[colnames(mov_coca) == "profit"] ="cola_profit"


#Pepsi
mov_pepsi <- filter(mov,UPC %in% c("1200000230", "1200000231", "1200000294", "1200000295", "1200000016", "1200000090", "1200000190", "1200000844", "1200000845", "420", "421", "1200000017", "1200000053", "1200000917", "1200000918", "1200000013", "1200000050", "1200000826", "1200000841"))

mov_pepsi <- mov_pepsi %>% mutate(profit = ((PRICE*MOVE)/QTY)*(PROFIT/100))

mov_pepsi <- mov_pepsi %>% group_by(STORE,WEEK) %>% 
  summarise(across(c(profit),sum),
            .groups = 'drop') %>%
  as.data.frame()

mov_pepsi <- mov_pepsi %>% filter(WEEK %in% (17:68))
colnames(mov_pepsi)[colnames(mov_pepsi) == "profit"] ="pepsi_profit"



#Sprite
mov_sprite <- filter(mov,UPC %in% c("4900000551", "4900000569", "4900000579", "4900000600", "4900000927", "4900000983", "4900000984", "453", "454", "4900000129", "4900000459", "4900000897", "4900000993", "4900000132", "4900000460", "4900000174", "4900000199", "4900000669"))

mov_sprite <- mov_sprite %>% mutate(profit = ((PRICE*MOVE)/QTY)*(PROFIT/100))

mov_sprite <- mov_sprite %>% group_by(STORE,WEEK) %>% 
  summarise(across(c(profit),sum),
            .groups = 'drop') %>%
  as.data.frame()

mov_sprite <- mov_sprite %>% filter(WEEK %in% (17:68))
colnames(mov_sprite)[colnames(mov_sprite) == "profit"] ="sprite_profit"


mov <- cbind(mov_coca,mov_pepsi,mov_sprite)
mov <- mov[, !duplicated(colnames(mov))]

colnames(mov)[colnames(mov) == "STORE"] ="store"
colnames(mov)[colnames(mov) == "WEEK"] ="week"

rm(mov_coca,mov_pepsi,mov_sprite)
```

```{r}
# Due to how the weekly reporting is structured, the data will include the dates from 04/01-1990 to 02/01-1991
# Remove stores with incomplete dates
# Merge movement and customer count

customers <- count %>% filter(week %in% (17:68))

customers <- customers %>%
  group_by(store) %>%
  mutate(days = n())

customers <- customers %>% filter(days %in% (364))

customers <- customers %>% 
  group_by(store,week) %>% 
    summarise(across(c(2:60),sum),
            .groups = 'drop') %>%
  as.data.frame()

unique1 <- unique(mov[c("store")])
unique2 <- unique(customers[c("store")])
unique <- merge (unique1,unique2)

mov_filter <- filter(mov, store %in% unique$store)
cust_filter <- filter(customers, store %in% unique$store)
mov_cust <- cbind(mov_filter,cust_filter)

rm(unique1,unique2,cust_filter,mov_filter,mov,customers)
```

```{r}
# Remove stores that are not in the dataframe(mov_cust)
# Remove columns that are not part of the manual "Part 2: store-specific Demographics"
# Duplicate the rows to match the dataframes
# Merge Movement and Customer count with Store-specific demographic

demo <- filter(demo, store %in% unique$store)

demo <- demo %>%
  select(0:56)

demo <- rep(demo, each=52)
mov_cust_demo <- cbind(mov_cust,demo)
mov_cust_demo <- mov_cust_demo[, !duplicated(colnames(mov_cust_demo))]

rm(unique,count,mov_cust,demo)
```

```{r}
# Save the dataframe as a csv file

write.csv(mov_cust_demo, "G:\\UiT_Fag\\SOK-1005\\Assignments\\Eksamensoppgave\\mov_cust_demo.csv", row.names=FALSE)
```
